# Default values for cluster-setup.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

storageClasses:
  - name: default
    provisioner: rancher.io/local-path
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Retain
    allowVolumeExpansion: true


argo-cd:
  enabled: true
  crds:
    keep: false
  controller:
    replicas: 1
  namespaceOverride: argocd
  fullnameOverride: argocd
  server:
    insecure: true
    service:
      type: LoadBalancer
      port: 80
      targetPort: 8080

cert-manager:
  enabled: true
  crds:
    enabled: true
    keep: false
  ingressShim:
    defaultIssuerName: letsencrypt-prod
    defaultIssuerKind: ClusterIssuer

apisix:
  enabled: true
  namespace: ingress-apisix
  namespaceOverride: ingress-apisix
  applicationValues:
      apisix:
        enabled: true
        prometheus:
          enabled: true
        ssl:
          enabled: true
      service:
        type: LoadBalancer
        # annotations:
        #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"        
        #   service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "subnet-dev-spoke04"        
        # loadBalancerIp: 10.43.0.10
      gateway:
        type: LoadBalancer
        tls:
          enabled: true
          servicePort: 443
          containerPort: 9443

      admin:
        enabled: true

      dashboard:
        enabled: true

      ingress-controller:
        enabled: true
        config:
          apisix:
            serviceNamespace: ingress-apisix
            adminAPIVersion: "v3"
      etcd:
        persistence:
          enabled: true
          storageClass: default
          size: 10Gi
          accessModes:
            - ReadWriteOnce

kurrentdb:
  enabled: true
  namespace: kurrentdb
  image:
    repository: docker.kurrent.io/kurrent-latest/kurrentdb
    tag: latest
    pullPolicy: IfNotPresent
  insecure: true  # set to true to enable EVENTSTORE_INSECURE
  resources:
    requests:
      cpu: "400m"
      memory: "2Gi"
    limits:
      cpu: "500m"
      memory: "3Gi"
  pvc:
    name: pvc-eventstore
    storage: 20Gi
    storageClassName: default
  secretName: mysecret
  adminPasswordKey: changeit


kube-prometheus-stack:
  enabled: true
  namespaceOverride: monitoring
  applicationValues:
    namespaceOverride: monitoring
    grafana:
      persistence: 
        enabled: true
        storageClassName: default
        accessModes:
          - ReadWriteOnce
        size: 10Gi
    prometheus:
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
              storageClassName: default
elasticsearch:
  enabled: true
  namespaceOverride: elasticsearch
  applicationValues:
    replicas: 1
    minimumMasterNodes: 1
    volumeClaimTemplate:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 30Gi
      storageClassName: default
    persistence:
      enabled: true
