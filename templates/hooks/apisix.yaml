apiVersion: batch/v1
kind: Job
metadata:
  name: create-argo-applications
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: argo-app-installer
      restartPolicy: OnFailure
      containers:
        - name: create-argo-app
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for ArgoCD to be available..."
              until kubectl wait --for=condition=available deployment/argocd-server -n argocd --timeout=120s; do
                echo "Still waiting..."
                sleep 5
              done
{{- if .Values.apisix.enabled }}              
              echo "Applying ArgoCD Application for APISIX..."
              cat <<EOF | kubectl apply -f -
{{ tpl (include "cluster-setup.argoApisixApplication" .) . | indent 14 }}
              EOF
              echo "ArgoCD Application for APISIX created successfully."
{{- end }}
{{- if (index .Values "kube-prometheus-stack").enabled }}              
              echo "Applying ArgoCD Application for Kube prometheus stack..."
              cat <<EOF | kubectl apply -f -
{{ tpl (include "cluster-setup.argoPrometheusApplication" .) . | indent 14 }}
              EOF
              echo "ArgoCD Application for prometheus stack created successfully."
{{- end }}